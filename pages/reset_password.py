import streamlit as st
import gspread
import json
import pandas as pd
from oauth2client.service_account import ServiceAccountCredentials

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets API
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

try:
    # ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Credentials ‡∏à‡∏≤‡∏Å Streamlit Secrets (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Cloud)
    if "gcp" in st.secrets:
        credentials_dict = json.loads(st.secrets["gcp"]["credentials"])
        creds = ServiceAccountCredentials.from_json_keyfile_dict(credentials_dict, scope)
    else:
        # ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Credentials ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Local)
        creds = ServiceAccountCredentials.from_json_keyfile_name("pages/credentials.json", scope)

    # ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
    client = gspread.authorize(creds)
    sheet = client.open("fastlabor").sheet1  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠ Google Sheets ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

    # ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Google Sheets
    data = sheet.get_all_records()
    df = pd.DataFrame(data)

except Exception as e:
    st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Google Sheets: {e}")
    st.stop()

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤ Streamlit
st.set_page_config(page_title="Reset Password", page_icon="üîë", layout="centered")

st.title("Reset Password")

# ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
with st.form("reset_password_form"):
    email = st.text_input("Email", placeholder="Enter your email")
    new_password = st.text_input("New Password", type="password", placeholder="Enter new password")
    confirm_password = st.text_input("Confirm Password", type="password", placeholder="Re-enter new password")
    
    submit_button = st.form_submit_button("Reset Password")

# ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Reset Password
if submit_button:
    if not email or not new_password or not confirm_password:
        st.error("‚ùå Please fill in all fields.")
    elif new_password != confirm_password:
        st.error("‚ùå Passwords do not match. Please try again.")
    else:
        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if email in df["email"].values:
            try:
                # ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
                row_index = df[df["email"] == email].index[0] + 2  # ‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô Google Sheets (index ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 0 + header)
                
                # ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
                sheet.update_cell(row_index, df.columns.get_loc("password") + 1, new_password)

                st.success("‚úÖ Password updated successfully!")
            except Exception as e:
                st.error(f"‚ùå Error: {e}")
        else:
            st.error("‚ùå Email not found. Please try again.")

# ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Login
st.page_link("app.py", label="Go to Login", icon="üîë")
