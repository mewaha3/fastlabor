import streamlit as st
import gspread
import json
import pandas as pd
from oauth2client.service_account import ServiceAccountCredentials

st.set_page_config(page_title="My Profile", page_icon="üë§", layout="centered")
st.title("üë§ My Full Profile")

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Login
if "user_email" not in st.session_state or not st.session_state["user_email"]:
    st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    st.page_link("app.py", label="‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Login", icon="üîô")
    st.stop()

email = st.session_state["user_email"]

# ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
try:
    if "gcp" in st.secrets:
        credentials_dict = json.loads(st.secrets["gcp"]["credentials"])
        creds = ServiceAccountCredentials.from_json_keyfile_dict(credentials_dict, scope)
    else:
        creds = ServiceAccountCredentials.from_json_keyfile_name("pages/credentials.json", scope)

    client = gspread.authorize(creds)
    sheet = client.open("fastlabor").sheet1
    records = sheet.get_all_records()
    df = pd.DataFrame(records)
except Exception as e:
    st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets: {e}")
    st.stop()

# ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•
user_data = df[df["email"] == email]
if user_data.empty:
    st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
    st.stop()

user = user_data.iloc[0]
row_index = user_data.index[0] + 2  # +2 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ header ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÅ‡∏ñ‡∏ß 1

# ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô email, national_id)
st.markdown("### üßç Personal Info")
first_name = st.text_input("First Name", user.get("first_name", ""))
last_name = st.text_input("Last Name", user.get("last_name", ""))
national_id = st.text_input("National ID", user.get("national_id", ""), disabled=True)
dob = st.text_input("Date of Birth", user.get("dob", ""))
gender = st.selectbox("Gender", ["Male", "Female", "Other"], index=["Male", "Female", "Other"].index(user.get("gender", "Male")))
nationality = st.text_input("Nationality", user.get("nationality", ""))

st.markdown("### üè° Address")
address = st.text_area("Address", user.get("address", ""))
province = st.text_input("Province", user.get("province", ""))
district = st.text_input("District", user.get("district", ""))
subdistrict = st.text_input("Subdistrict", user.get("subdistrict", ""))
zip_code = st.text_input("Zip Code", user.get("zip_code", ""))

st.markdown("### üìß Account")
st.text_input("Email", user.get("email", ""), disabled=True)

st.markdown("### üìé Documents (from upload.py)")
certificate = st.text_input("Certificate", user.get("certificate", ""))
passport = st.text_input("Passport", user.get("passport", ""))
visa = st.text_input("Visa", user.get("visa", ""))
work_permit = st.text_input("Work Permit", user.get("work_permit", ""))

# ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
if st.button("üíæ Save Changes"):
    try:
        sheet.update(f"A{row_index}:Q{row_index}", [[
            first_name, last_name, national_id, dob, gender, nationality,
            address, province, district, subdistrict, zip_code,
            email, user.get("password", ""), certificate, passport, visa, work_permit
        ]])
        st.success("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
    except Exception as e:
        st.error(f"‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")

# ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home
st.page_link("pages/home.py", label="üè† Go to Home", icon="üè°")
