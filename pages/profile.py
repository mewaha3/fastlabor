import streamlit as st
import gspread
import json
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Streamlit
st.set_page_config(page_title="My Profile", page_icon="üôç", layout="centered")
st.image("image.png", width=150)
st.title("üßë‚Äçüíº ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß")

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Session
user_email = st.session_state.get("user_email") or st.session_state.get("email")
if not user_email:
    st.error("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏Å‡πà‡∏≠‡∏ô")
    st.stop()

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets API
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

try:
    if "gcp" in st.secrets and "credentials" in st.secrets["gcp"]:
        credentials_dict = json.loads(st.secrets["gcp"]["credentials"])
        creds = ServiceAccountCredentials.from_json_keyfile_dict(credentials_dict, scope)
    else:
        creds = ServiceAccountCredentials.from_json_keyfile_name("pages/credentials.json", scope)

    client = gspread.authorize(creds)
    sheet = client.open("fastlabor").sheet1
    values = sheet.get_all_values()
    headers = [h.strip().lower() for h in values[0]]

except Exception as e:
    st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Google Sheets: {e}")
    st.stop()

# ‚úÖ ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
if "email" not in headers:
    st.error("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå email ‡πÉ‡∏ô Google Sheets")
    st.stop()

email_col = headers.index("email")
user_row = next(
    (i + 2 for i, row in enumerate(values[1:]) if len(row) > email_col and row[email_col] == user_email),
    None
)

if not user_row:
    st.error(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á {user_email}")
    st.stop()

user_data = sheet.row_values(user_row)
profile_data = dict(zip(headers, user_data))

# ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å string ‚Üí datetime.date (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö date_input)
dob_str = profile_data.get("date of birth", "")
try:
    dob_default = datetime.strptime(dob_str, "%Y-%m-%d").date() if dob_str else datetime.today().date()
except Exception:
    dob_default = datetime.today().date()

# ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
with st.form("edit_profile"):
    st.markdown("### ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß")

    first_name = st.text_input("First Name", value=profile_data.get("first name", ""))
    last_name = st.text_input("Last Name", value=profile_data.get("last name", ""))
    national_id = st.text_input("National ID", value=profile_data.get("national id", ""))
    dob = st.date_input("Date of Birth", value=dob_default)
    gender = st.selectbox("Gender", ["Male", "Female", "Other"],
                          index=["Male", "Female", "Other"].index(profile_data.get("gender", "Male")))
    nationality = st.text_input("Nationality", value=profile_data.get("nationality", ""))
    address = st.text_area("Address", value=profile_data.get("address", ""))
    province = st.text_input("Province", value=profile_data.get("province", ""))
    district = st.text_input("District", value=profile_data.get("district", ""))
    subdistrict = st.text_input("Subdistrict", value=profile_data.get("subdistrict", ""))
    zip_code = st.text_input("Zip Code", value=profile_data.get("zip code", ""))
    email = st.text_input("Email (‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ)", value=user_email, disabled=True)

    submitted = st.form_submit_button("üíæ Save")

# ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
if submitted:
    try:
        update_values = [
            first_name, last_name, national_id, str(dob), gender, nationality,
            address, province, district, subdistrict, zip_code, user_email
        ]

        for i, val in enumerate(update_values):
            sheet.update_cell(user_row, i + 1, val)

        st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

    except Exception as e:
        st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {e}")
