import streamlit as st
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import pandas as pd

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets API
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("pages/credentials.json", scope)
client = gspread.authorize(creds)

# ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Google Sheet
sheet = client.open("fastlabor").sheet1  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠ Google Sheet ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Google Sheets
data = sheet.get_all_records()
df = pd.DataFrame(data)

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
if "email" not in st.session_state:
    st.warning("üîí ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô")
    st.stop()

# ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏° email
email = st.session_state["email"]
user_data = df[df["email"] == email]

if user_data.empty:
    st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
    st.stop()

user = user_data.iloc[0]  # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'skills', 'password' ‡πÅ‡∏•‡∏∞ 'additional_skill' ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if "skills" not in user:
    user["skills"] = ""
if "password" not in user:
    user["password"] = ""  # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• password ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
if "additional_skill" not in user:
    user["additional_skill"] = ""

# ‚úÖ UI ‡∏´‡∏ô‡πâ‡∏≤ Profile
st.set_page_config(page_title="Profile", page_icon="üë§", layout="centered")
st.title("Profile")

# ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
with st.form("profile_form"):
    first_name = st.text_input("First name *", user["first_name"])
    last_name = st.text_input("Last name *", user["last_name"])
    dob = st.date_input("Date of Birth *", pd.to_datetime(user["dob"]))
    gender = st.selectbox("Gender *", ["Male", "Female", "Other"], index=["Male", "Female", "Other"].index(user["gender"]))
    nationality = st.text_input("Nationality *", user["nationality"])
    member_type = st.selectbox("Member Type *", ["Employer", "Worker"], index=["Employer", "Worker"].index(user["member_type"]))
    address = st.text_area("Address (House Number, Road, Soi.)", user["address"])
    
    province = st.text_input("Province *", user["province"])
    district = st.text_input("District *", user["district"])
    subdistrict = st.text_input("Subdistrict *", user["subdistrict"])
    zip_code = st.text_input("Zip Code *", user["zip_code"])
    
    # ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞ (Skill)
    skills = ["Skill 1", "Skill 2", "Skill 3", "Skill 4", "Skill 5"]
    selected_skills = st.multiselect("Skill *", skills, user["skills"].split(", ") if user["skills"] else [])

    additional_skill = st.text_area("Additional Skill", user["additional_skill"])
    
    # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á email (‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
    st.text_input("Email address", user["email"], disabled=True)
    
    # ‚úÖ ‡∏õ‡∏∏‡πà‡∏° Save Profile
    submit_button = st.form_submit_button("Save Profile")

# ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Save ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Google Sheets
if submit_button:
    try:
        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        row_index = user_data.index[0] + 2  # ‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô Google Sheets (index ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 0 + header)
        
        # ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Google Sheets (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á)
        sheet.update(f"A{row_index}:O{row_index}", [[
            first_name, last_name, str(dob), gender, nationality, member_type, address,
            province, district, subdistrict, zip_code, email, user["password"], ", ".join(selected_skills), additional_skill
        ]])

        st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    except Exception as e:
        st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

# ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home
st.page_link("pages/home.py", label="Go to Homepage", icon="üè†")
